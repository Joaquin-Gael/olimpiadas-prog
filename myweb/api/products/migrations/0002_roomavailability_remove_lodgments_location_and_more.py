# Generated by Django 5.2.3 on 2025-06-29 09:57

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models
from django.utils import timezone


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RoomAvailability',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='room_availability_id')),
                ('start_date', models.DateField(db_index=True)),
                ('end_date', models.DateField(db_index=True)),
                ('available_quantity', models.IntegerField(help_text='Number of rooms of this type available for the period', validators=[django.core.validators.MinValueValidator(0)])),
                ('price_override', models.DecimalField(blank=True, decimal_places=2, help_text='Override price for this period (if different from base price)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('is_blocked', models.BooleanField(default=False, help_text='If true, room is blocked and not available for booking')),
                ('minimum_stay', models.IntegerField(default=1, help_text='Minimum number of nights required for booking', validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'room_availabilities',
                'ordering': ['room', 'start_date'],
            },
        ),
        migrations.RemoveField(
            model_name='lodgments',
            name='location',
        ),
        migrations.AlterModelOptions(
            name='room',
            options={'ordering': ['lodgment', 'room_type', 'name']},
        ),
        migrations.AddField(
            model_name='room',
            name='base_price_per_night',
            field=models.DecimalField(decimal_places=2, default=1, help_text='Base price per night for this room type', max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='room',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='room',
            name='currency',
            field=models.CharField(default='USD', max_length=3),
        ),
        migrations.AddField(
            model_name='room',
            name='has_air_conditioning',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='room',
            name='has_balcony',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='room',
            name='has_private_bathroom',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='room',
            name='has_wifi',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='room',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AddField(
            model_name='room',
            name='name',
            field=models.CharField(blank=True, help_text='Optional room name/number', max_length=64),
        ),
        migrations.AddField(
            model_name='room',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='room',
            name='capacity',
            field=models.IntegerField(help_text='Maximum number of people this room can accommodate', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='room',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False, verbose_name='room_id'),
        ),
        migrations.AlterField(
            model_name='room',
            name='room_type',
            field=models.CharField(choices=[('single', 'Single'), ('double', 'Double'), ('triple', 'Triple'), ('quadruple', 'Quadruple'), ('suite', 'Suite'), ('family', 'Family'), ('dormitory', 'Dormitory'), ('studio', 'Studio')], db_index=True, max_length=32),
        ),
        migrations.AlterModelTable(
            name='room',
            table='rooms',
        ),
        migrations.CreateModel(
            name='Lodgment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='lodgment_id')),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('description', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('hotel', 'Hotel'), ('hostel', 'Hostel'), ('apartment', 'Apartment'), ('house', 'House'), ('cabin', 'Cabin'), ('resort', 'Resort'), ('bed_and_breakfast', 'Bed And Breakfast'), ('villa', 'Villa'), ('camping', 'Camping')], help_text='Type of accommodation', max_length=32)),
                ('max_guests', models.IntegerField(help_text='Maximum number of guests the property can accommodate', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('amenities', models.JSONField(blank=True, default=list, help_text='List of available amenities')),
                ('date_checkin', models.DateField(db_index=True)),
                ('date_checkout', models.DateField(db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.location')),
            ],
            options={
                'db_table': 'lodgments',
                'ordering': ['name'],
            },
        ),
        migrations.AlterField(
            model_name='room',
            name='lodgment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='products.lodgment'),
        ),
        migrations.AlterUniqueTogether(
            name='room',
            unique_together={('lodgment', 'room_type', 'name')},
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['lodgment', 'room_type'], name='rooms_lodgmen_d773d4_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['room_type', 'is_active'], name='rooms_room_ty_40f0ff_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['capacity'], name='rooms_capacit_c8100e_idx'),
        ),
        migrations.AddField(
            model_name='roomavailability',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='products.room'),
        ),
        migrations.AddIndex(
            model_name='lodgment',
            index=models.Index(fields=['type', 'is_active'], name='lodgments_type_4fa21b_idx'),
        ),
        migrations.AddIndex(
            model_name='lodgment',
            index=models.Index(fields=['location', 'is_active'], name='lodgments_locatio_5aa30d_idx'),
        ),
        migrations.AddIndex(
            model_name='lodgment',
            index=models.Index(fields=['date_checkin', 'date_checkout'], name='lodgments_date_ch_b6dfeb_idx'),
        ),
        migrations.DeleteModel(
            name='Lodgments',
        ),
        migrations.RemoveField(
            model_name='room',
            name='available_quantity',
        ),
        migrations.RemoveField(
            model_name='room',
            name='price_per_night',
        ),
        migrations.AddIndex(
            model_name='roomavailability',
            index=models.Index(fields=['room', 'start_date', 'end_date'], name='room_availa_room_id_337d6e_idx'),
        ),
        migrations.AddIndex(
            model_name='roomavailability',
            index=models.Index(fields=['start_date', 'end_date'], name='room_availa_start_d_e63470_idx'),
        ),
        migrations.AddIndex(
            model_name='roomavailability',
            index=models.Index(fields=['is_blocked'], name='room_availa_is_bloc_415f3b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='roomavailability',
            unique_together={('room', 'start_date', 'end_date')},
        ),
    ]
