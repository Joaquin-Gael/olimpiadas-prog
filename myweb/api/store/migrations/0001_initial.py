# Generated by Django 4.2.7 on 2024-01-15 10:00:00

from django.db import migrations, models
import django.db.models.deletion
from decimal import Decimal


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0002_add_initial_data'),
        ('products', '0002_add_initial_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='Companions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='companion_id')),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('identity_document_type', models.CharField(max_length=64)),
                ('identity_document', models.CharField(max_length=255)),
                ('born_date', models.DateField()),
                ('sex', models.CharField(max_length=8)),
                ('observations', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='order_id')),
                ('date', models.DateTimeField()),
                ('state', models.CharField(max_length=32)),
                ('total', models.DecimalField(max_digits=10, decimal_places=2)),
                ('idempotency_key', models.CharField(max_length=64, unique=True, null=True, blank=True, db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='notification_id')),
                ('email_destination', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('date', models.DateTimeField()),
                ('notification_type', models.CharField(max_length=32)),
                ('shipping_state', models.CharField(max_length=32)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.orders')),
            ],
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='sale_id')),
                ('amount', models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)),
                ('total', models.DecimalField(max_digits=10, decimal_places=2)),
                ('payment_status', models.CharField(max_length=20)),
                ('sale_type', models.CharField(max_length=20)),
                ('payment_type', models.CharField(max_length=20)),
                ('transaction_number', models.IntegerField(unique=True, null=True, blank=True, db_index=True)),
                ('sale_date', models.DateTimeField(db_index=True)),
                ('transaction_id', models.CharField(max_length=64, unique=True, null=True, blank=True, db_index=True)),
                ('idempotency_key', models.CharField(max_length=64, unique=True, null=True, blank=True, db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.orders')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='order_detail_id')),
                ('availability_id', models.PositiveIntegerField()),
                ('quantity', models.IntegerField()),
                ('unit_price', models.DecimalField(max_digits=10, decimal_places=2)),
                ('subtotal', models.DecimalField(max_digits=10, decimal_places=2)),
                ('discount_applied', models.DecimalField(max_digits=5, decimal_places=2)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.orders')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.packages')),
                ('product_metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productsmetadata')),
            ],
        ),
        migrations.CreateModel(
            name='Vouchers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='voucher_id')),
                ('emission_date', models.DateTimeField()),
                ('voucher_code', models.CharField(max_length=128)),
                ('passenger_type', models.CharField(max_length=32)),
                ('state', models.CharField(max_length=32)),
                ('passenger', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='store.companions')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.sales')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
        ),
        migrations.CreateModel(
            name='VoucherDetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='voucher_detail_id')),
                ('service_name', models.CharField(max_length=32)),
                ('product_type', models.CharField(max_length=32)),
                ('quantity', models.IntegerField()),
                ('order', models.CharField(max_length=32)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.packages')),
                ('product_metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productsmetadata')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.vouchers')),
            ],
        ),
        migrations.CreateModel(
            name='Bills',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='bill_id')),
                ('bill_number', models.PositiveIntegerField()),
                ('emission_date', models.DateTimeField()),
                ('items_details', models.TextField()),
                ('total', models.DecimalField(max_digits=10, decimal_places=2)),
                ('state', models.CharField(max_length=20)),
                ('bill_type', models.CharField(max_length=20)),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.sales')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=8)),
                ('currency', models.CharField(max_length=3)),
                ('total', models.DecimalField(max_digits=12, decimal_places=2)),
                ('items_cnt', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.users', related_name='carts')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('availability_id', models.PositiveIntegerField()),
                ('product_metadata_id', models.PositiveIntegerField()),
                ('qty', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(max_digits=12, decimal_places=2)),
                ('currency', models.CharField(max_length=3)),
                ('config', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.cart', related_name='items')),
            ],
        ),
        migrations.CreateModel(
            name='StoreIdempotencyRecord',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=64)),
                ('method', models.CharField(max_length=6)),
                ('path', models.CharField(max_length=256)),
                ('status', models.PositiveSmallIntegerField()),
                ('response', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, blank=True, on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
        ),
        migrations.AddIndex(
            model_name='cart',
            index=models.Index(fields=['user', 'status'], name='store_cart_user_id_8b8b8b_idx'),
        ),
        migrations.AddIndex(
            model_name='cartitem',
            index=models.Index(fields=['cart', 'availability_id'], name='store_carti_cart_id_8b8b8b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cartitem',
            unique_together={('cart', 'availability_id')},
        ),
        migrations.AddIndex(
            model_name='storeidempotencyrecord',
            index=models.Index(fields=['key', 'user', 'method', 'path'], name='store_store_key_8b8b8b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='storeidempotencyrecord',
            unique_together={('key', 'user', 'method', 'path')},
        ),
    ] 